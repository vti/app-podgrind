#!/usr/bin/env perl

use strict;
use warnings;

use Getopt::Long;
use File::Find ();
use Pod::Usage;

use App::Podgrind;

my $backup;
my $recursive;
my $prune;
my $inplace;
my $verbose;
my $help;
my @inc;

Getopt::Long::Configure('no_auto_abbrev', 'no_ignore_case', 'pass_through',
    'bundling');
GetOptions(
    'backup'      => \$backup,
    'r|recursive' => \$recursive,
    'prune'       => \$prune,
    'i|inplace'   => \$inplace,
    'v|verbose'   => \$verbose,
    'I=s@'        => \@inc,
    'help|?'      => \$help
) or pod2usage(2);

pod2usage(1) if $help;

my $podgrind =
  App::Podgrind->new(backup => $backup, prune => $prune, inplace => $inplace);

my @input;
foreach my $file (@ARGV) {
    if (-d $file && $recursive) {
        unshift @INC, $file;
        File::Find::find(
            sub { push @input, $File::Find::name if /\.p(?:m|l)$/; }, $file);
    }
    else {
        push @input, $file;
    }
}

unshift @INC, $_ for @inc;

for my $input (@input) {
    warn "Processing $input...\n" if $verbose;
    $podgrind->process(input => $input);
}
